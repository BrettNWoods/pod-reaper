plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.72"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

version "0.1-SNAPSHOT"
group "org.sgdan"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    developmentOnly
}

dependencies {
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.swagger.core.v3:swagger-annotations"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut:micronaut-management"
    kapt platform("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kapt "io.micronaut.configuration:micronaut-openapi"
    kaptTest platform("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.0"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    // see https://medium.com/@zakgof/type-safe-actor-model-for-java-7133857a9f72
    compile "com.github.zakgof:actr:0.4.0"

    compile "io.github.microutils:kotlin-logging:1.7.9"
    compile "io.fabric8:kubernetes-client:4.10.1"
    testCompile "io.fabric8:kubernetes-server-mock:4.10.1"
    testRuntimeOnly "junit:junit:4.13"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.6.2"
}

test.classpath += configurations.developmentOnly

mainClassName = "org.sgdan.podreaper.Application"

test {
    useJUnitPlatform()
}

allOpen {
    annotation("io.micronaut.aop.Around")
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
        javaParameters = true
    }
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-Dcom.sun.management.jmxremote')
